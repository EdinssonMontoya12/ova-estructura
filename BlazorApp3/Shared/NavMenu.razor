@using BlazorApp3.Models.Entitys

@inject OvaEstructuraContext dbContext

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Estructura de datos</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Inicio
            </NavLink>
        </div>

        <AuthorizeView>

            @foreach (var modulo in modulos)
            {
                <div class="nav-item px-3">
                    <div class="text-light">
                        <i class="bi bi-bookmark-fill"></i> @modulo.Nombre
                    </div>
                    <NavLink class="nav-link ms-3" href="@($"Modulo/{modulo.Moduloid}")">
                        <i class="bi bi-card-text me-1"></i> Contenido
                    </NavLink>
                    @if(modulo.Tienecuestionario == 1)
                    {
                        <NavLink class="nav-link ms-3" href="@($"Cuestionario/{modulo.Moduloid}")">
                            <i class="bi bi-question-lg me-1"></i> Cuestionario
                        </NavLink>
                    }
                </div>
            }
        </AuthorizeView>


    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private List<Modulo> modulos;

    protected override async Task OnInitializedAsync()
    {
        modulos = dbContext.Modulos.ToList();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
